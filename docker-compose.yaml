services:
  frontend:
    build:
      context: ./frontend
      dockerfile: front.Dockerfile
    ports:
      - 8080:80

  backend:
    build:
      context: backend
      dockerfile: back.Dockerfile
    depends_on:
      - mongo
    env_file:
      - ./backend/.env
    ports:
      - 4000:4000
  mongo:
    image: mongo
    restart: always
    env_file:
      - ./mongoDB/.env
    volumes:
      - mongo_storage:/data/db
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - ./mongoDB/.env
  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z-cpuv1
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    env_file:
      - ./minio/.env
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - ./minio/.env
    volumes:
      - ./images:/images
      - ./minio/entrypoint.sh:/entrypoint.sh
    entrypoint: >
      /bin/sh -c "
        chmod +x /entrypoint.sh;
        /bin/sh /entrypoint.sh;
        exit 0;
      "

volumes:
  mongo_storage:
  minio_data: