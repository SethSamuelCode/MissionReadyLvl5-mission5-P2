services:
  frontend:
    build:
      context: ./frontend
      dockerfile: front.dockerfile
    ports:
      - 8080:80
 
  backend:
    build:
      context: backend
      dockerfile: back.dockerfile
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - ./backend/.env
    ports:
      - 4000:4000
  mongo:
    image: mongo
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    env_file:
      - ./mongoDB/.env
    # volumes:
    #   - mongo_storage:/data/db
    ports:
      - 27017:27017
 
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - ./mongoDB/.env
  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z-cpuv1
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    ports:
      - 9000:9000
      - 9001:9001
    # volumes:
    #   # - ./images:/data
    #   - ./minio/setBucketOpen.sh:/docker-entrypoint-initbucket.d/policy.sh
    env_file:
      - path: minio/.env
        required: true
    command: server /data --console-address ":9001"
  createbuckets:
    build:
      context: minio
      dockerfile: minioFromScratch.dockerfile
    depends_on:
      minio:
        condition: service_healthy
    # restart: on-failure
    env_file:
      - path: minio/.env
        required: true
    volumes:
      - ./images:/images
    #   - ./minio/entrypoint.sh:/entrypoint.sh
    # entrypoint: >
    #   /bin/sh -c "
    #     chmod +x /entrypoint.sh;
    #     /bin/sh /entrypoint.sh;
    #     exit 0;
    #   "
 
  seed_db:
    build:
      context: autoDbSeeder
      dockerfile: seeder.dockerfile
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./mongoDB/SampleAuctionData.json:/SampleAuctionData.json:ro
      - ./mongoDB/mockUserData.json:/mockUserData.json:ro
      # - ./backend/autoSeed.js:/autoSeed.js:ro
      # - ./autoDbSeeder:/app/
    env_file:
      - path: ./backend/.env
        required: true
    # entrypoint:
    #   /bin/sh -c "
    #   echo 'about to run entrypoint';
    #   chmod +x /app/entrypoint.sh;
    #   /bin/sh /app/entrypoint.sh;
    #   echo 'ran entrypoint';
    #   exit 0;
    #   "
 